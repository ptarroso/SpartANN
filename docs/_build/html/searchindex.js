Search.setIndex({"alltitles": {"A First Model": [[2, null]], "Advanced": [[1, null]], "Advanced use": [[11, "advanced-use"]], "Check Installation": [[4, "check-installation"]], "Conda Installation": [[4, "conda-installation"]], "Ensembling": [[2, "ensembling"]], "Examples": [[0, null], [3, null]], "Getting Started": [[3, null]], "Installation": [[4, null]], "Module contents": [[6, "module-spartann"], [7, "module-spartann.classifier"], [8, "module-spartann.datatable"], [9, "module-spartann.engine"], [10, "module-spartann.spatial"]], "Package API": [[3, null], [5, null]], "Predicting with model": [[1, "predicting-with-model"]], "Predicting with the Model": [[2, "predicting-with-the-model"]], "Prepare Input": [[2, "prepare-input"]], "Read data": [[1, "read-data"]], "Requirements": [[4, "requirements"]], "Results": [[1, "results"]], "Simple Use": [[11, "simple-use"]], "SpartANN": [[3, null]], "SpartANN - Spectral Pattern Analysis and Remote-sensing Tool with Artificial Neural Networks": [[6, "spartann-spectral-pattern-analysis-and-remote-sensing-tool-with-artificial-neural-networks"]], "Submodules": [[6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "Subpackages": [[6, "subpackages"]], "System Installation": [[4, "system-installation"]], "Train the Model": [[2, "train-the-model"]], "Training the models": [[1, "training-the-models"]], "Usage": [[11, null]], "spartann package": [[6, null]], "spartann.classifier package": [[7, null]], "spartann.classifier.classifier module": [[7, "module-spartann.classifier.classifier"]], "spartann.classifier.model module": [[7, "module-spartann.classifier.model"]], "spartann.classifier.validation module": [[7, "module-spartann.classifier.validation"]], "spartann.datatable package": [[8, null]], "spartann.datatable.datatable module": [[8, "module-spartann.datatable.datatable"]], "spartann.engine package": [[9, null]], "spartann.engine.nnEngine module": [[9, "module-spartann.engine.nnEngine"]], "spartann.spatial package": [[10, null]], "spartann.spatial.raster module": [[10, "module-spartann.spatial.raster"]], "spartann.version module": [[6, "module-spartann.version"]]}, "docnames": ["examples", "examples/advanced", "examples/simple", "index", "install", "modules", "spartann", "spartann.classifier", "spartann.datatable", "spartann.engine", "spartann.spatial", "usage"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["examples.rst", "examples/advanced.rst", "examples/simple.rst", "index.rst", "install.rst", "modules.rst", "spartann.rst", "spartann.classifier.rst", "spartann.datatable.rst", "spartann.engine.rst", "spartann.spatial.rst", "usage.rst"], "indexentries": {"add_model() (spartann.classifier.model.modelcontainer method)": [[7, "spartann.classifier.model.ModelContainer.add_model", false]], "add_model() (spartann.classifier.modelcontainer method)": [[7, "spartann.classifier.ModelContainer.add_model", false]], "annclassifier (class in spartann.classifier)": [[7, "spartann.classifier.AnnClassifier", false]], "annclassifier (class in spartann.classifier.classifier)": [[7, "spartann.classifier.classifier.AnnClassifier", false]], "annpredict (class in spartann.classifier)": [[7, "spartann.classifier.AnnPredict", false]], "annpredict (class in spartann.classifier.classifier)": [[7, "spartann.classifier.classifier.AnnPredict", false]], "calc() (spartann.classifier.validation method)": [[7, "spartann.classifier.Validation.calc", false]], "calc() (spartann.classifier.validation.validation method)": [[7, "spartann.classifier.validation.Validation.calc", false]], "cohenkappa() (in module spartann.classifier.validation)": [[7, "spartann.classifier.validation.cohenkappa", false]], "cohenskappa_validation (in module spartann.classifier.validation)": [[7, "spartann.classifier.validation.CohensKappa_Validation", false]], "error (spartann.classifier.model property)": [[7, "spartann.classifier.Model.error", false]], "error (spartann.classifier.model.model property)": [[7, "spartann.classifier.model.Model.error", false]], "from_annclassifier() (spartann.classifier.annpredict class method)": [[7, "spartann.classifier.AnnPredict.from_annclassifier", false]], "from_annclassifier() (spartann.classifier.classifier.annpredict class method)": [[7, "spartann.classifier.classifier.AnnPredict.from_annclassifier", false]], "from_datatable() (spartann.classifier.annclassifier class method)": [[7, "spartann.classifier.AnnClassifier.from_datatable", false]], "from_datatable() (spartann.classifier.classifier.annclassifier class method)": [[7, "spartann.classifier.classifier.AnnClassifier.from_datatable", false]], "from_modelsfile() (spartann.classifier.annpredict class method)": [[7, "spartann.classifier.AnnPredict.from_modelsfile", false]], "from_modelsfile() (spartann.classifier.classifier.annpredict class method)": [[7, "spartann.classifier.classifier.AnnPredict.from_modelsfile", false]], "from_options() (spartann.classifier.annclassifier class method)": [[7, "spartann.classifier.AnnClassifier.from_options", false]], "from_options() (spartann.classifier.classifier.annclassifier class method)": [[7, "spartann.classifier.classifier.AnnClassifier.from_options", false]], "get_best_models() (spartann.classifier.model.modelcontainer method)": [[7, "spartann.classifier.model.ModelContainer.get_best_models", false]], "get_best_models() (spartann.classifier.modelcontainer method)": [[7, "spartann.classifier.ModelContainer.get_best_models", false]], "get_best_nets() (spartann.classifier.model.modelcontainer method)": [[7, "spartann.classifier.model.ModelContainer.get_best_nets", false]], "get_best_nets() (spartann.classifier.modelcontainer method)": [[7, "spartann.classifier.ModelContainer.get_best_nets", false]], "getmodels (spartann.classifier.annclassifier property)": [[7, "spartann.classifier.AnnClassifier.getmodels", false]], "getmodels (spartann.classifier.classifier.annclassifier property)": [[7, "spartann.classifier.classifier.AnnClassifier.getmodels", false]], "load() (spartann.classifier.model.modelcontainer class method)": [[7, "spartann.classifier.model.ModelContainer.load", false]], "load() (spartann.classifier.modelcontainer class method)": [[7, "spartann.classifier.ModelContainer.load", false]], "model (class in spartann.classifier)": [[7, "spartann.classifier.Model", false]], "model (class in spartann.classifier.model)": [[7, "spartann.classifier.model.Model", false]], "modelcontainer (class in spartann.classifier)": [[7, "spartann.classifier.ModelContainer", false]], "modelcontainer (class in spartann.classifier.model)": [[7, "spartann.classifier.model.ModelContainer", false]], "module": [[6, "module-spartann", false], [6, "module-spartann.version", false], [7, "module-spartann.classifier", false], [7, "module-spartann.classifier.classifier", false], [7, "module-spartann.classifier.model", false], [7, "module-spartann.classifier.validation", false]], "n_inputs (spartann.classifier.model.modelcontainer property)": [[7, "spartann.classifier.model.ModelContainer.n_inputs", false]], "n_inputs (spartann.classifier.modelcontainer property)": [[7, "spartann.classifier.ModelContainer.n_inputs", false]], "n_outputs (spartann.classifier.model.modelcontainer property)": [[7, "spartann.classifier.model.ModelContainer.n_outputs", false]], "n_outputs (spartann.classifier.modelcontainer property)": [[7, "spartann.classifier.ModelContainer.n_outputs", false]], "pearsonscorr() (in module spartann.classifier.validation)": [[7, "spartann.classifier.validation.pearsonscorr", false]], "pearsonscorr_validation (in module spartann.classifier.validation)": [[7, "spartann.classifier.validation.PearsonsCorr_Validation", false]], "predict() (spartann.classifier.annpredict method)": [[7, "spartann.classifier.AnnPredict.predict", false]], "predict() (spartann.classifier.classifier.annpredict method)": [[7, "spartann.classifier.classifier.AnnPredict.predict", false]], "predictfromdatatable() (spartann.classifier.annpredict method)": [[7, "spartann.classifier.AnnPredict.predictFromDataTable", false]], "predictfromdatatable() (spartann.classifier.classifier.annpredict method)": [[7, "spartann.classifier.classifier.AnnPredict.predictFromDataTable", false]], "predictfromraster() (spartann.classifier.annpredict method)": [[7, "spartann.classifier.AnnPredict.predictFromRaster", false]], "predictfromraster() (spartann.classifier.classifier.annpredict method)": [[7, "spartann.classifier.classifier.AnnPredict.predictFromRaster", false]], "save() (spartann.classifier.model.modelcontainer method)": [[7, "spartann.classifier.model.ModelContainer.save", false]], "save() (spartann.classifier.modelcontainer method)": [[7, "spartann.classifier.ModelContainer.save", false]], "spartann": [[6, "module-spartann", false]], "spartann.classifier": [[7, "module-spartann.classifier", false]], "spartann.classifier.classifier": [[7, "module-spartann.classifier.classifier", false]], "spartann.classifier.model": [[7, "module-spartann.classifier.model", false]], "spartann.classifier.validation": [[7, "module-spartann.classifier.validation", false]], "spartann.version": [[6, "module-spartann.version", false]], "trainmodel() (spartann.classifier.annclassifier method)": [[7, "spartann.classifier.AnnClassifier.trainModel", false]], "trainmodel() (spartann.classifier.classifier.annclassifier method)": [[7, "spartann.classifier.classifier.AnnClassifier.trainModel", false]], "validation (class in spartann.classifier)": [[7, "spartann.classifier.Validation", false]], "validation (class in spartann.classifier.validation)": [[7, "spartann.classifier.validation.Validation", false]], "validation() (spartann.classifier.model method)": [[7, "spartann.classifier.Model.validation", false]], "validation() (spartann.classifier.model.model method)": [[7, "spartann.classifier.model.Model.validation", false]], "writemodel() (spartann.classifier.annclassifier method)": [[7, "spartann.classifier.AnnClassifier.writeModel", false]], "writemodel() (spartann.classifier.classifier.annclassifier method)": [[7, "spartann.classifier.classifier.AnnClassifier.writeModel", false]]}, "objects": {"": [[6, 0, 0, "-", "spartann"]], "spartann": [[7, 0, 0, "-", "classifier"], [8, 0, 0, "-", "datatable"], [9, 0, 0, "-", "engine"], [10, 0, 0, "-", "spatial"], [6, 0, 0, "-", "version"]], "spartann.classifier": [[7, 1, 1, "", "AnnClassifier"], [7, 1, 1, "", "AnnPredict"], [7, 1, 1, "", "Model"], [7, 1, 1, "", "ModelContainer"], [7, 1, 1, "", "Validation"], [7, 0, 0, "-", "classifier"], [7, 0, 0, "-", "model"], [7, 0, 0, "-", "validation"]], "spartann.classifier.AnnClassifier": [[7, 2, 1, "", "from_datatable"], [7, 2, 1, "", "from_options"], [7, 3, 1, "", "getmodels"], [7, 2, 1, "", "trainModel"], [7, 2, 1, "", "writeModel"]], "spartann.classifier.AnnPredict": [[7, 2, 1, "", "from_annclassifier"], [7, 2, 1, "", "from_modelsfile"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "predictFromDataTable"], [7, 2, 1, "", "predictFromRaster"]], "spartann.classifier.Model": [[7, 3, 1, "", "error"], [7, 2, 1, "", "validation"]], "spartann.classifier.ModelContainer": [[7, 2, 1, "", "add_model"], [7, 2, 1, "", "get_best_models"], [7, 2, 1, "", "get_best_nets"], [7, 2, 1, "", "load"], [7, 3, 1, "", "n_inputs"], [7, 3, 1, "", "n_outputs"], [7, 2, 1, "", "save"]], "spartann.classifier.Validation": [[7, 2, 1, "", "calc"]], "spartann.classifier.classifier": [[7, 1, 1, "", "AnnClassifier"], [7, 1, 1, "", "AnnPredict"]], "spartann.classifier.classifier.AnnClassifier": [[7, 2, 1, "", "from_datatable"], [7, 2, 1, "", "from_options"], [7, 3, 1, "", "getmodels"], [7, 2, 1, "", "trainModel"], [7, 2, 1, "", "writeModel"]], "spartann.classifier.classifier.AnnPredict": [[7, 2, 1, "", "from_annclassifier"], [7, 2, 1, "", "from_modelsfile"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "predictFromDataTable"], [7, 2, 1, "", "predictFromRaster"]], "spartann.classifier.model": [[7, 1, 1, "", "Model"], [7, 1, 1, "", "ModelContainer"]], "spartann.classifier.model.Model": [[7, 3, 1, "", "error"], [7, 2, 1, "", "validation"]], "spartann.classifier.model.ModelContainer": [[7, 2, 1, "", "add_model"], [7, 2, 1, "", "get_best_models"], [7, 2, 1, "", "get_best_nets"], [7, 2, 1, "", "load"], [7, 3, 1, "", "n_inputs"], [7, 3, 1, "", "n_outputs"], [7, 2, 1, "", "save"]], "spartann.classifier.validation": [[7, 4, 1, "", "CohensKappa_Validation"], [7, 4, 1, "", "PearsonsCorr_Validation"], [7, 1, 1, "", "Validation"], [7, 5, 1, "", "cohenkappa"], [7, 5, 1, "", "pearsonscorr"]], "spartann.classifier.validation.Validation": [[7, 2, 1, "", "calc"]], "spartann.datatable": [[8, 1, 1, "", "DataTable"], [8, 0, 0, "-", "datatable"]], "spartann.datatable.DataTable": [[8, 2, 1, "", "add_datacolumn"], [8, 2, 1, "", "add_datacolumns"], [8, 2, 1, "", "addpoint"], [8, 2, 1, "", "exclude_nan"], [8, 2, 1, "", "from_file"], [8, 3, 1, "", "getClasses"], [8, 3, 1, "", "getData"], [8, 2, 1, "", "getDataFromRaster"], [8, 3, 1, "", "getPoints"], [8, 2, 1, "", "getRow"], [8, 3, 1, "", "has_nan"], [8, 3, 1, "", "has_row_nan"], [8, 3, 1, "", "is_scaled"], [8, 3, 1, "", "means"], [8, 3, 1, "", "nclasses"], [8, 3, 1, "", "ndatacols"], [8, 2, 1, "", "rm_data"], [8, 2, 1, "", "rm_datacolumn"], [8, 2, 1, "", "rmpoint"], [8, 2, 1, "", "scaleData"], [8, 3, 1, "", "scale_means"], [8, 3, 1, "", "scale_sdevs"], [8, 3, 1, "", "sdevs"], [8, 2, 1, "", "setDataRow"], [8, 2, 1, "", "where_nan"], [8, 2, 1, "", "write_to_file"]], "spartann.datatable.datatable": [[8, 1, 1, "", "DataTable"], [8, 5, 1, "", "str2num"]], "spartann.datatable.datatable.DataTable": [[8, 2, 1, "", "add_datacolumn"], [8, 2, 1, "", "add_datacolumns"], [8, 2, 1, "", "addpoint"], [8, 2, 1, "", "exclude_nan"], [8, 2, 1, "", "from_file"], [8, 3, 1, "", "getClasses"], [8, 3, 1, "", "getData"], [8, 2, 1, "", "getDataFromRaster"], [8, 3, 1, "", "getPoints"], [8, 2, 1, "", "getRow"], [8, 3, 1, "", "has_nan"], [8, 3, 1, "", "has_row_nan"], [8, 3, 1, "", "is_scaled"], [8, 3, 1, "", "means"], [8, 3, 1, "", "nclasses"], [8, 3, 1, "", "ndatacols"], [8, 2, 1, "", "rm_data"], [8, 2, 1, "", "rm_datacolumn"], [8, 2, 1, "", "rmpoint"], [8, 2, 1, "", "scaleData"], [8, 3, 1, "", "scale_means"], [8, 3, 1, "", "scale_sdevs"], [8, 3, 1, "", "sdevs"], [8, 2, 1, "", "setDataRow"], [8, 2, 1, "", "where_nan"], [8, 2, 1, "", "write_to_file"]], "spartann.engine": [[9, 1, 1, "", "NN"], [9, 5, 1, "", "drelu"], [9, 5, 1, "", "dsigm"], [9, 0, 0, "-", "nnEngine"], [9, 5, 1, "", "relu"], [9, 5, 1, "", "sigm"]], "spartann.engine.NN": [[9, 2, 1, "", "XORexample"], [9, 2, 1, "", "backpropag"], [9, 2, 1, "", "calcTargetError"], [9, 2, 1, "", "checkVarNames"], [9, 2, 1, "", "feedforward"], [9, 2, 1, "", "glorotWeights"], [9, 2, 1, "", "heWeights"], [9, 2, 1, "", "initWeights"], [9, 2, 1, "", "lecunWeights"], [9, 2, 1, "", "loadnet"], [9, 2, 1, "", "loadnet_fromfile"], [9, 3, 1, "", "means"], [9, 2, 1, "", "neterror"], [9, 2, 1, "", "pderiv"], [9, 2, 1, "", "rndWeights"], [9, 2, 1, "", "savenet"], [9, 2, 1, "", "scale"], [9, 3, 1, "", "sdevs"], [9, 2, 1, "", "setFunc"], [9, 2, 1, "", "structure"], [9, 2, 1, "", "testnet"], [9, 2, 1, "", "trainnet"], [9, 2, 1, "", "update_weights"]], "spartann.engine.nnEngine": [[9, 1, 1, "", "NN"]], "spartann.engine.nnEngine.NN": [[9, 2, 1, "", "XORexample"], [9, 2, 1, "", "backpropag"], [9, 2, 1, "", "calcTargetError"], [9, 2, 1, "", "checkVarNames"], [9, 2, 1, "", "feedforward"], [9, 2, 1, "", "glorotWeights"], [9, 2, 1, "", "heWeights"], [9, 2, 1, "", "initWeights"], [9, 2, 1, "", "lecunWeights"], [9, 2, 1, "", "loadnet"], [9, 2, 1, "", "loadnet_fromfile"], [9, 3, 1, "", "means"], [9, 2, 1, "", "neterror"], [9, 2, 1, "", "pderiv"], [9, 2, 1, "", "rndWeights"], [9, 2, 1, "", "savenet"], [9, 2, 1, "", "scale"], [9, 3, 1, "", "sdevs"], [9, 2, 1, "", "setFunc"], [9, 2, 1, "", "structure"], [9, 2, 1, "", "testnet"], [9, 2, 1, "", "trainnet"], [9, 2, 1, "", "update_weights"]], "spartann.spatial": [[10, 1, 1, "", "Raster"], [10, 5, 1, "", "progressbar"], [10, 0, 0, "-", "raster"]], "spartann.spatial.Raster": [[10, 2, 1, "", "addDescription"], [10, 2, 1, "", "addMetadata"], [10, 2, 1, "", "addNewBand"], [10, 2, 1, "", "aggregate_bands"], [10, 3, 1, "", "bandnames"], [10, 2, 1, "", "block_iter"], [10, 2, 1, "", "copy"], [10, 3, 1, "", "extent"], [10, 2, 1, "", "extractFromXY"], [10, 2, 1, "", "from_array"], [10, 2, 1, "", "from_file"], [10, 2, 1, "", "from_raster"], [10, 2, 1, "", "from_scratch"], [10, 2, 1, "", "getMetadata"], [10, 2, 1, "", "getRowColFromXY"], [10, 2, 1, "", "getXYFromRowCol"], [10, 2, 1, "", "get_array"], [10, 2, 1, "", "get_nodata_mask"], [10, 2, 1, "", "get_subarray"], [10, 3, 1, "", "hasSource"], [10, 3, 1, "", "nbands"], [10, 3, 1, "", "origin"], [10, 3, 1, "", "proj"], [10, 3, 1, "", "res"], [10, 2, 1, "", "set_array"], [10, 3, 1, "", "size"], [10, 2, 1, "", "writeRaster"]], "spartann.spatial.raster": [[10, 1, 1, "", "Raster"], [10, 5, 1, "", "progressbar"]], "spartann.spatial.raster.Raster": [[10, 2, 1, "", "addDescription"], [10, 2, 1, "", "addMetadata"], [10, 2, 1, "", "addNewBand"], [10, 2, 1, "", "aggregate_bands"], [10, 3, 1, "", "bandnames"], [10, 2, 1, "", "block_iter"], [10, 2, 1, "", "copy"], [10, 3, 1, "", "extent"], [10, 2, 1, "", "extractFromXY"], [10, 2, 1, "", "from_array"], [10, 2, 1, "", "from_file"], [10, 2, 1, "", "from_raster"], [10, 2, 1, "", "from_scratch"], [10, 2, 1, "", "getMetadata"], [10, 2, 1, "", "getRowColFromXY"], [10, 2, 1, "", "getXYFromRowCol"], [10, 2, 1, "", "get_array"], [10, 2, 1, "", "get_nodata_mask"], [10, 2, 1, "", "get_subarray"], [10, 3, 1, "", "hasSource"], [10, 3, 1, "", "nbands"], [10, 3, 1, "", "origin"], [10, 3, 1, "", "proj"], [10, 3, 1, "", "res"], [10, 2, 1, "", "set_array"], [10, 3, 1, "", "size"], [10, 2, 1, "", "writeRaster"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:data", "5": "py:function"}, "terms": {"": [1, 2, 7, 8, 9], "0": [1, 2, 7, 8, 9, 10], "00": 9, "00000": 2, "00081": 1, "001": [1, 7], "00210": 9, "01": [1, 7, 9], "0116930046623356": 1, "0263790532540662": 1, "1": [1, 2, 7, 9, 10], "10": [1, 2, 7, 9], "1000": [7, 9], "10000": 7, "1012": 1, "1013": 1, "1027": 1, "1040": 1, "1073": 1, "1079": 1, "1099": 1, "10m": 2, "11": 1, "1111": 9, "1131": 1, "1137": 1, "1184": 1, "1190": 1, "12": [1, 8], "1211": 1, "125": 1, "129": 1, "1294": 1, "13": [1, 2], "133": 1, "1330": 1, "1332": 1, "1354": 1, "1373": 1, "1375": 1, "14": 1, "1417": 1, "1422": 1, "1423": 1, "1449": 1, "1455": 1, "1494": 1, "15": 1, "1510": 1, "1519": 1, "1527": 1, "1571": 1, "1580": 1, "1608": 1, "1610": 1, "1629": 1, "1669": 1, "18": 9, "1854": 1, "1875": 1, "1941": 1, "1946": 1, "1962": 1, "1991": 1, "1e": 9, "2": [1, 2, 7, 9], "20": [1, 2, 7], "2010": 9, "2012": 9, "2022": 1, "2024": 9, "2025": 6, "2041": 9, "20m": 2, "210x": 9, "2143": 1, "2147": 1, "2190": 1, "2256": 1, "2264": 1, "2304": 1, "2305": 1, "2306": 1, "250": [7, 10], "2632": 1, "291481186293516": 1, "2a": 2, "2d": 10, "3": [1, 2, 7, 9], "30": 2, "304985786439687": 1, "3057673879941003": 1, "307": 2, "3124087591240876": 1, "324294339644675": 1, "3367": 1, "3505338078291815": 1, "351": 2, "3545": 1, "3609": 1, "3666666666666667": 1, "3674": 1, "3689829556096647": 1, "393": 2, "3d": 10, "4": [1, 7, 9], "4020": 1, "41": 1, "41155974584955934": 1, "43351548269581053": 1, "443": 1, "4493": 1, "4494047": 1, "4494916": 1, "4495044": 1, "4496580": 1, "4496869": 1, "4497198": 1, "4497836": 1, "4498192": 1, "4499194": 1, "4612": 1, "4670": 1, "47058823529411764": 1, "4727": 1, "4887": 2, "490": 1, "4984": 1, "49998": 2, "5": [1, 2, 7], "5245": 1, "526": 2, "5263157894736842": 1, "5268065268065267": 1, "527": 1, "5352112676056338": 1, "5401543510961322": 1, "560": 1, "561109": 1, "561844": 1, "562007": 1, "562593": 1, "562642": 1, "564507": 1, "565530": 1, "566504": 1, "567055": 1, "6": [1, 2, 9, 10], "60": 2, "60m": 2, "6108202443280977": 1, "6258572183908": 1, "643": 1, "6502732240437158": 1, "66": 2, "665": 1, "6666666666666666": 1, "667": 1, "6843413421706711": 1, "7": 1, "701067615658363": 1, "705": 1, "722": 1, "72282": 1, "7273137773705625": 1, "740": 1, "7438099420979907": 1, "746": 2, "769": 1, "777": 1, "781021897810219": 1, "783": 1, "7830216289715917": 1, "790": 1, "7902097902097902": 1, "7982456140350878": 1, "7984901277584204": 1, "8": [1, 7], "810948597977949": 1, "8235294117647058": 1, "8309859154929577": 1, "8319342549497482": 1, "832": 1, "8333333333333334": 1, "842": 1, "849658052782215": 1, "865": 1, "874": 2, "8745644599303136": 1, "9": [1, 7, 9], "9154929577464789": 1, "9162303664921466": 1, "9166666666666666": 1, "930": 1, "945": 1, "9578947368421052": 1, "9581881533101045": 1, "981142437982789": 1, "998": 2, "999": [1, 7], "9999": 7, "A": [0, 1, 3, 7, 8, 9, 10], "At": 3, "By": 1, "FOR": 9, "For": [1, 2, 3, 9], "If": [1, 2, 4, 7, 8, 9, 10], "In": [1, 2], "It": [1, 2, 7, 8, 9, 10, 11], "Its": 3, "No": 10, "One": [1, 9], "The": [1, 2, 3, 4, 7, 8, 9, 10, 11], "These": [1, 3, 11], "To": [1, 2, 4, 11], "With": [1, 4], "__version__": 4, "abil": 1, "abov": 2, "accept": [1, 9, 10], "access": 11, "accomplish": 2, "accumul": 9, "achiev": 7, "activ": [1, 2, 4, 9], "ad": 8, "adagrad": 7, "adam": [1, 7], "adapt": [1, 3, 11], "add": [1, 8, 10], "add_datacolumn": [6, 8], "add_model": [6, 7], "adda": 8, "adddescript": [6, 10], "addit": 4, "addition": 3, "addmetadata": [6, 10], "addnewband": [6, 10], "addpoint": [6, 8], "adjust": 7, "advanc": [0, 3], "advantag": 1, "after": [2, 7], "aggreg": [1, 10, 11], "aggregate_band": [1, 6, 10], "agreement": 7, "all": [1, 2, 7, 8, 9, 10], "allow": [1, 3, 4, 7, 8, 9, 10, 11], "along": [4, 9], "alreadi": 4, "also": [1, 3], "altern": 1, "although": [2, 11], "alwai": 9, "among": 2, "an": [1, 2, 7, 8, 9, 10, 11], "analysi": [1, 3, 5], "ani": [1, 2, 8, 9, 10, 11], "ann": [1, 3, 7], "annclassifi": [1, 6, 7], "annpredict": [1, 6, 7], "anoth": [2, 10], "ap": 1, "api": 11, "appli": [3, 10], "approach": [1, 2, 11], "ar": [1, 2, 3, 4, 7, 8, 9, 11], "architectur": 1, "area": 2, "argument": [1, 2, 10, 11], "around": 10, "arr": 10, "arrai": [7, 8, 10], "artifici": [3, 5, 7, 11], "assess": [2, 7], "associ": [1, 3, 7, 10], "attempt": [4, 8, 10], "automat": 4, "avail": [1, 2, 7, 8, 9, 10, 11], "avoid": [7, 10], "ax": 1, "axi": 10, "b1": [1, 7], "b10": 1, "b11": 1, "b12": 1, "b2": [1, 7], "b3": 1, "b4": 1, "b5": 1, "b6": 1, "b7": 1, "b8": 1, "b8a": 1, "b9": 1, "backpropag": [6, 9], "balanc": 1, "band": [1, 2, 7, 8, 10, 11], "bandnam": [1, 6, 10], "bar": 10, "base": [1, 2, 3, 7, 8, 9, 10, 11], "basic": [2, 3, 11], "batch": [7, 9], "batch_siz": [7, 9], "becaus": 3, "becom": 1, "befor": [2, 7], "beforehand": 1, "begin": 1, "bellow": 7, "below": [1, 2, 7], "best": [1, 2, 7], "best_it": 7, "better": 1, "between": [3, 7, 9], "bia": 9, "binari": 7, "block": [7, 10], "block_it": [6, 10], "blocksiz": [7, 10], "blue": 2, "bname": 1, "bolean": 8, "bool": [7, 8, 9, 10], "boolean": 8, "both": [1, 3, 7], "brito": 9, "broader": 3, "build": [3, 9, 11], "buildmodel": [2, 11], "built": [1, 2, 3], "burn": 7, "burnin": 7, "c": [2, 6, 9], "calc": [6, 7], "calctargeterror": [6, 9], "calcul": [1, 7, 9], "calibr": [2, 7], "callabl": 7, "can": [1, 2, 3, 4, 9, 11], "capabl": 1, "carvalho": 9, "case": [1, 11], "categor": [3, 11], "categori": 3, "caution": 10, "center": 1, "central": 1, "chang": [1, 9], "check": [1, 3, 7, 8, 11], "checkvarnam": [6, 9], "choos": [4, 7], "cl": 8, "class": [1, 7, 8, 9, 10, 11], "class_nam": 8, "classif": [3, 7, 8, 9], "classifi": [1, 3, 5, 6, 9, 10], "classmethod": [7, 8, 9, 10], "clean": 8, "clearer": 1, "clone": 4, "cloud": [1, 2], "clouds_model": [1, 2], "code": [1, 4, 11], "cohen": [1, 2, 7], "cohenkappa": [6, 7], "cohenskappa_valid": [6, 7], "col": 10, "col1": 8, "col2": 8, "colnam": 8, "color": 2, "column": [8, 10], "combin": [1, 3], "command": [2, 4, 11], "common": [1, 3], "complet": 1, "complex": [1, 3], "compress": 10, "comput": 1, "conda": [1, 2, 3], "configur": [1, 3, 11], "connect": 3, "consid": [7, 8], "consider": 8, "consist": 1, "contain": [2, 7, 9, 11], "content": [3, 5], "contex": 10, "continu": [3, 7], "control": [7, 9], "convent": [1, 10], "convers": 10, "convert": [8, 10], "convna": 10, "coodin": [8, 10], "coordin": [1, 2, 8, 10], "copi": [6, 9, 10], "copyright": [6, 9], "core": [1, 2, 3, 7, 10, 11], "corner": 10, "correct": [4, 11], "correctli": 4, "correl": 7, "correspond": 2, "cover": 8, "cpu": [1, 2, 10], "crd": [8, 10], "creat": [1, 2, 4, 7, 9, 10], "crop": 2, "csv": [1, 2], "current": [1, 2, 8, 9, 10, 11], "custom": [3, 11], "customiz": 3, "data": [0, 2, 3, 7, 8, 9, 10, 11], "dataset": [1, 2, 7, 10, 11], "datat": [1, 3, 5, 6, 7], "datatyp": 10, "datset": 10, "dead": 9, "decai": 7, "decreas": 2, "deep": 3, "default": [1, 7, 8, 9, 10], "defin": [1, 2, 3, 7, 9, 10], "definit": [1, 9, 11], "deliv": 3, "demonstr": [1, 2], "depend": [4, 7, 10], "deriv": 9, "descend": 7, "describ": 10, "descript": [1, 2, 10], "descriptor": 10, "descrpt": 8, "design": [3, 7], "desir": [2, 9], "detail": [1, 2, 9, 11], "detect": 1, "deviat": [1, 2, 7, 8, 9, 10], "dfun": 9, "dict": 10, "dictionari": 10, "difer": 7, "differ": [1, 2, 3, 7], "dimens": 9, "directli": [3, 4, 11], "directori": [2, 4, 11], "displai": [1, 2, 4], "distrib": 9, "distribut": [4, 9], "divers": 3, "do": [1, 11], "doc": 2, "document": 2, "doe": [1, 8, 10], "doi": 9, "downscal": 2, "drelu": [6, 9], "driver": 10, "dsigm": [6, 9], "dt": [7, 8, 10], "dtype": [7, 10], "due": 2, "dure": [1, 10, 11], "e": [1, 10], "eacg": 9, "each": [1, 2, 3, 7, 9, 10], "earli": 7, "earlier": 1, "eas": 3, "easi": [1, 11], "easili": [1, 2], "ecolog": 9, "ecologi": 9, "either": [7, 8, 9, 10], "element": 10, "empti": 10, "engin": [3, 5, 6], "ensembl": [0, 1, 3, 7, 11], "ensur": 2, "enumer": 1, "env": 4, "environ": [1, 2, 4], "ep": 9, "equal": 7, "equival": 10, "eras": 8, "errdiff": [1, 2], "error": [1, 2, 4, 6, 7, 9], "errortyp": 9, "especi": 10, "evalu": [7, 9], "even": 9, "everi": [1, 7], "evid": 1, "evolut": 9, "exampl": [1, 2, 9, 11], "excel": 3, "exclud": 8, "exclude_nan": [6, 8], "execut": 4, "exist": 7, "expect": [8, 10], "explor": 1, "export": 8, "expos": 11, "extens": 7, "extent": [6, 8, 10], "extern": 1, "extra": 8, "extract": [1, 3, 8, 10, 11], "extractfromxi": [6, 10], "f": 2, "facilit": 10, "factor": [2, 7], "fail": 10, "fals": 8, "featur": 2, "feedforward": [6, 9], "fetch": 4, "few": [4, 10], "field": 2, "file": [1, 2, 3, 4, 7, 8, 9, 10, 11], "filenam": [2, 7, 8, 10], "fill": [8, 10], "final": [2, 3, 10, 11], "first": [0, 1, 3, 4, 7, 10], "fit": [7, 9], "five": 1, "fiven": 8, "flexibl": [1, 3, 11], "float": [7, 8, 9, 10], "follow": [1, 4, 7, 11], "forc": 10, "form": 7, "format": [1, 3, 7, 11], "found": [1, 8], "foundat": 9, "four": 2, "free": 9, "friendli": 3, "from": [1, 2, 3, 4, 7, 8, 9, 10, 11], "from_annclassifi": [6, 7], "from_arrai": [6, 10], "from_datat": [1, 6, 7], "from_fil": [1, 6, 8, 10], "from_modelsfil": [1, 6, 7], "from_opt": [6, 7], "from_rast": [6, 10], "from_scratch": [6, 10], "full": [1, 8, 10, 11], "fulli": [3, 11], "fun": [1, 9, 10], "func": 7, "function": [1, 2, 9, 10, 11], "funtion": 9, "further": [1, 2, 8, 11], "g": [1, 10], "gain": 1, "gdal": [1, 4, 10], "gener": [1, 2, 3, 7, 9, 10, 11], "geograph": 2, "geotransform": 10, "get": [7, 8, 10], "get_arrai": [6, 10], "get_best_model": [6, 7], "get_best_net": [6, 7], "get_nodata_mask": [6, 10], "get_subarrai": [6, 10], "getclass": [6, 8], "getdata": [6, 8], "getdatafromrast": [1, 6, 8], "getmetadata": [6, 10], "getmodel": [6, 7], "getpoint": [6, 8], "getrow": [6, 8], "getrowcolfromxi": [6, 10], "getxyfromrowcol": [6, 10], "gi": [1, 2], "github": 4, "given": [7, 8, 9, 10], "glorot": 9, "glorotweight": [6, 9], "gnu": 9, "gradient": [7, 9], "greater": [7, 11], "gtiff": 10, "h": 11, "ha": [2, 4, 10], "handl": 10, "happen": 7, "has_nan": [6, 8], "has_row_nan": [6, 8], "hassourc": [6, 10], "have": [1, 2, 4, 7, 8, 9, 10], "he": 9, "help": 1, "here": [1, 2], "heweight": [6, 9], "hidden": [1, 2, 3, 7, 9], "high": 3, "highlight": 2, "hl": [1, 2], "hl_scheme": [1, 7], "hope": 9, "how": 2, "http": 9, "i": [1, 2, 3, 4, 7, 8, 9, 10, 11], "i1": 9, "i2": 9, "i3": 9, "i_1_1": 9, "i_1_2": 9, "i_1_n": 9, "i_2_1": 9, "i_2_2": 9, "i_2_n": 9, "i_p_1": 9, "i_p_2": 9, "i_p_n": 9, "identif": 2, "identifi": [2, 3], "ignor": 8, "illustr": [1, 2], "imag": [1, 2, 11], "imageri": 3, "impli": 9, "import": [1, 3, 4, 7, 8, 11], "improv": 2, "includ": [1, 2, 3], "increas": 1, "independ": [7, 9, 11], "index": [1, 10], "indic": [1, 8, 10], "inform": [2, 7, 11], "init": 9, "initi": [1, 9, 10], "initiallis": 7, "initit": 8, "initweight": [6, 9], "input": [0, 1, 3, 7, 9], "insid": 8, "inspect": [1, 2], "instac": 7, "instal": [1, 2, 3], "instanc": [7, 8, 9, 10], "instanti": 7, "instead": 7, "int": [7, 8, 10], "int16": 7, "integ": [8, 9, 10], "integr": [1, 3, 11], "interact": [1, 8, 11], "interf": 4, "interfac": 8, "interpol": 2, "intersect": 1, "intric": 1, "intuit": [1, 11], "io": 10, "is_scal": [6, 8], "item": [9, 10], "iter": [1, 2, 7, 9, 10], "its": [1, 3, 11], "j": 9, "just": [1, 10], "kappa": [1, 2, 7], "kei": 1, "kept": 1, "known": 10, "l1c": 2, "label": 11, "larg": [7, 10], "larger": 7, "lat": 8, "later": [1, 9], "layer": [1, 2, 3, 7, 9], "learn": [1, 3, 7, 8], "lecun": 9, "lecunweight": [6, 9], "left": 10, "len": 8, "length": [8, 9, 10], "level": [1, 9], "leverag": 1, "li": 3, "librari": 1, "licens": 9, "like": 1, "limit": 1, "line": [4, 8, 11], "linear": 3, "list": [1, 7, 8, 9, 10, 11], "load": [1, 6, 7, 9, 10], "loadnet": [6, 9], "loadnet_fromfil": [6, 9], "locat": [1, 2, 10], "lon": 8, "look": 2, "lower": [2, 10], "lr": [1, 7, 9], "lrate": 1, "main": 8, "make": [2, 3, 10, 11], "mani": [2, 8], "map": [2, 9], "mask": [2, 10], "matplotlib": 1, "max": [10, 11], "maximum": 7, "maxit": 7, "mean": [1, 2, 6, 7, 8, 9, 10, 11], "mean_predict": [1, 2], "measur": 7, "median": [10, 11], "medium": 1, "memori": 10, "merchant": 9, "metadata": [7, 10], "metadata_dict": 10, "method": [1, 4, 7, 8, 9, 10], "metric": [1, 2, 7], "might": [1, 7, 10], "min": [10, 11], "miniconda": 4, "minim": [1, 4], "miss": 8, "mitig": 3, "mode": 11, "model": [0, 3, 5, 6, 9, 11], "modelcontain": [6, 7], "modifi": [9, 10], "modul": [1, 3, 4, 5, 11], "mom": 1, "momentum": [1, 7, 9], "more": [1, 9, 11], "most": [1, 4], "mu": 9, "multi": 10, "multicor": [1, 7], "multilay": 3, "multipl": [1, 2, 3, 7, 8, 10], "multipli": 7, "must": [1, 2, 7, 8, 9, 10], "n": 9, "n_input": [6, 7, 9], "n_output": [6, 7, 9], "na": 10, "name": [1, 2, 7, 8, 9, 10], "nan": [8, 10], "navig": 4, "nband": [1, 6, 10], "nclass": [6, 8], "ncore": [1, 7, 10], "ndarrai": [8, 10], "ndatacol": [6, 8], "necessari": 4, "need": [1, 2, 3, 4, 7, 8, 10, 11], "neg": 7, "neglig": 2, "neither": 8, "net": [1, 2, 7, 9], "neterror": [6, 9], "netfil": 9, "netstr": 9, "network": [1, 2, 3, 5, 7, 9, 11], "neural": [3, 5, 7, 9, 11], "neuron": [1, 2, 3, 7, 9], "new": [1, 3, 7, 8, 10], "nich": 9, "nm": 1, "nn": [6, 9], "nnengin": [3, 5, 6], "nnumpi": 10, "nodata": [1, 7, 10], "non": [2, 3, 10], "none": [7, 8, 9, 10], "normail": 9, "normal": 9, "note": [1, 7, 8, 9, 10], "noth": 9, "now": 1, "np": [1, 8, 10], "number": [1, 2, 3, 7, 8, 9, 10], "numer": 8, "numpi": [1, 4, 10], "o": [1, 2, 9], "o_1_1": 9, "o_1_2": 9, "o_1_n": 9, "o_2_1": 9, "o_2_2": 9, "o_2_n": 9, "o_o_1": 9, "o_o_2": 9, "o_o_n": 9, "obj": [1, 2, 7], "object": [1, 7, 8, 9, 10], "observ": 2, "obtain": [2, 4], "offer": 3, "often": 1, "onc": [1, 2, 7], "one": [1, 2, 7], "ones": 7, "onli": [1, 4, 7, 8], "onto": 1, "open": [1, 4, 7, 9], "optim": [1, 7, 9], "option": [1, 2, 7, 9, 10, 11], "order": [7, 9], "org": 9, "origin": [1, 2, 6, 7, 8, 9, 10], "osgeo": [1, 10], "other": [1, 2, 3, 7, 9], "otherwis": [1, 10], "ouput": 7, "our": 1, "outlin": 1, "output": [1, 2, 7, 9, 11], "output1": 7, "output_1": 7, "output_2": 7, "outsid": 1, "overal": 9, "overfit": [1, 3, 7], "overgener": 1, "overkil": 1, "overlaid": 2, "overwrit": 8, "overwritten": 8, "p": 9, "packag": [1, 2, 4], "pair": [8, 9, 10], "pait": 10, "param": [9, 10], "paramet": [1, 2, 7, 8, 9, 10], "partial": 9, "particular": [2, 9], "pass": 2, "path": [4, 8, 10, 11], "pattern": [3, 5, 7, 9], "pderiv": [6, 9], "pearson": 7, "pearsonscorr": [6, 7], "pearsonscorr_valid": [6, 7], "pedro": [6, 9], "per": [1, 7, 10], "percentag": 7, "perceptron": 3, "perform": [1, 2, 7], "pip": 4, "pixel": [1, 2], "plot": 1, "plu": [7, 9], "pnt": [1, 8], "point": [1, 2, 7, 8], "poorli": 2, "posit": [7, 10], "possibl": [3, 8], "pred": [1, 7], "prediciton": [2, 11], "predict": [0, 3, 6, 7, 9, 11], "predictfromdatat": [6, 7], "predictfromrast": [1, 6, 7], "predictor": 8, "prefer": 2, "prepar": [0, 1, 3], "preserv": 10, "previou": 1, "previous": 10, "primari": 3, "print": [1, 9], "probabl": 2, "problem": 1, "proce": 1, "process": [1, 2, 4, 7, 9, 10], "produc": [1, 2, 11], "product": [1, 2, 7], "program": [1, 9, 11], "progress": 10, "progressbar": [6, 10], "proj": [6, 10], "project": 10, "projwkt": 10, "properti": [7, 8, 9, 10], "provid": [1, 2, 3, 4, 7, 8, 10, 11], "provind": 10, "public": 9, "publish": 9, "purpos": [1, 9], "py": [2, 11], "python": [1, 2, 3, 4, 11], "qualiti": 3, "r": [1, 2], "random": [7, 9], "randomli": 2, "rang": [1, 3, 11], "raster": [1, 2, 3, 5, 6, 7, 8, 11], "rasterxs": 10, "rasterys": 10, "rate": [1, 7], "rc": 10, "re": [1, 6, 10], "reach": 10, "read": [0, 3, 8, 10, 11], "read_arr": 10, "readi": 1, "real": 7, "receiv": 9, "recommend": [4, 9], "red": 2, "redistribut": 9, "refer": [1, 2, 7, 8], "regardless": 1, "relat": 9, "relu": [6, 9], "remain": 1, "remot": [3, 5], "remov": [1, 2, 8], "reopen": 1, "rep": 1, "repetit": [1, 2, 3, 7], "replic": [1, 2], "repositori": 4, "repres": [1, 7, 8, 10], "represent": 9, "requir": [1, 3, 7, 9, 10, 11], "reserv": [1, 2, 7], "resolut": [2, 10], "respect": [1, 8, 9, 11], "respons": 9, "restart": 1, "result": [0, 2, 3, 9], "retain": 1, "retriev": [1, 2, 7, 8, 10], "return": [1, 7, 8, 9, 10], "rich": 11, "right": 2, "risk": 4, "rm_data": [6, 8], "rm_datacolumn": [6, 8], "rmpoint": [6, 8], "rmserror": 9, "rmsprop": [1, 7, 9], "rndweight": [6, 9], "root": 9, "row": [8, 10], "rst": [1, 8], "rst_mean": 1, "rst_sdev": 1, "run": [2, 4], "s2a_msil1c_20240119t112401_n0510_r037_t29tnf_20240119t132118": 2, "sa": [1, 11], "safe": 2, "same": [1, 2, 3, 7, 8, 9, 10, 11], "sampl": 7, "save": [1, 3, 6, 7, 9], "savenet": [6, 9], "scale": [1, 6, 7, 8, 9], "scale_mean": [6, 8], "scale_sdev": [6, 8], "scaledata": [1, 6, 8], "scheme": [1, 2, 7, 9], "scope": 1, "score": [7, 8, 9], "scratch": 10, "script": 11, "sdev": [6, 8, 9, 11], "sdev_predict": [1, 2], "section": [1, 2, 11], "see": [1, 9], "select": [2, 7], "semicolon": 2, "sens": [3, 5], "sentinel": 2, "sentinel2_cloud": [1, 2], "sep": [1, 8], "separ": [2, 8], "sequenc": 9, "seri": 1, "serv": 10, "session": 1, "set": [1, 2, 7, 9], "set_arrai": [6, 10], "setdatarow": [6, 8], "setfunc": [6, 9], "sgd": 7, "shape": 10, "share": 1, "should": [2, 4, 7, 9], "show": [1, 2], "showcas": 1, "shown": 2, "side": 10, "sigm": [6, 9], "sigma": 9, "sigmoid": 9, "simaps": 9, "similar": [2, 9], "simpl": [1, 3], "simplemomentum": 7, "simplest": 2, "simpli": [4, 7, 10], "simplifi": [3, 4, 7], "simul": 9, "sinc": [1, 2], "singl": [1, 3, 7, 8, 9, 10], "size": [6, 7, 9, 10], "skill": 11, "slight": 1, "slot": 7, "small": 9, "smoother": 7, "so": [1, 10], "softwar": [1, 2, 9], "some": [1, 2, 9, 11], "sourc": [2, 4, 7, 8, 9, 10], "spartann": [1, 2, 4, 5, 11], "spatial": [3, 5, 6], "specif": [2, 4, 7, 10, 11], "specifi": [1, 2, 10], "spectral": [2, 3, 5, 11], "sqrt": 9, "squar": [9, 10], "sserror": 9, "stabl": 7, "stable_v": 7, "stage": [1, 9], "standard": [1, 2, 3, 7, 8, 9, 10], "start": [1, 4, 8, 10, 11], "state": [9, 10], "std": [1, 2, 10], "step": [1, 4, 7], "stochast": 7, "stop": [2, 7], "storag": 7, "store": [7, 9], "str": [7, 8, 10], "str2num": [6, 8], "straightforward": [1, 2, 3, 4], "strategi": 1, "strength": [1, 3], "string": [8, 9, 10], "structur": [2, 3, 6, 8, 9], "style": 10, "sub": 10, "subarrai": 10, "submodul": [3, 5], "subpackag": [3, 5], "subset": 10, "substanti": 2, "success": [1, 4], "sum": 9, "superimpos": 1, "supervis": [1, 7, 8], "support": [3, 10], "symbol": 8, "system": [1, 3, 8], "t": 2, "tabl": 8, "tabular": [1, 3, 8, 11], "tailor": 11, "take": 1, "tanh": 9, "target": [1, 3, 7, 9], "tarroso": [6, 9], "task": 3, "tend": 1, "term": 9, "termin": 4, "test": [1, 2, 7, 9], "testnet": [6, 9], "testperc": [1, 7], "text": [1, 2, 3, 8, 10], "than": [7, 8], "them": 3, "thi": [1, 2, 3, 4, 7, 9, 10, 11], "those": 2, "though": 3, "three": [1, 2], "threshold": [2, 7], "through": [3, 4], "throughout": 1, "tif": [1, 2], "tiff": [1, 2, 3], "time": 1, "todo": 8, "tool": [2, 3, 5, 11], "total": [1, 10], "tracker": 7, "train": [0, 3, 7, 9, 11], "train_data": [1, 2], "trainmodel": [1, 6, 7], "trainnet": [6, 9], "transform": 1, "translat": 10, "tri": 8, "true": [2, 7, 9, 10], "tupl": [8, 10], "two": [1, 2, 7, 9, 11], "type": [7, 9, 10], "typic": [1, 3], "uncertainti": [1, 2], "under": [2, 9], "understand": 1, "uniform": [2, 9], "uniqu": 8, "updat": [7, 9], "update_weight": [6, 9], "us": [1, 2, 3, 4, 7, 8, 9, 10], "usag": [3, 10], "useful": 7, "user": [1, 2, 3, 7, 9, 10, 11], "usual": [7, 9, 10], "util": 11, "v": 9, "valid": [1, 2, 3, 5, 6], "validatio": 7, "valu": [1, 2, 7, 8, 9, 10], "vari": 1, "variabl": [1, 9], "varnam": 9, "vector": [8, 9], "verbos": 9, "veri": 1, "verifi": 4, "versatil": 3, "version": [2, 3, 4, 5, 9], "via": 1, "visual": 1, "wa": [1, 2, 10], "wai": 4, "want": 2, "warranti": 9, "wavelength": 1, "we": [1, 2], "weigh": 9, "weight": [7, 9], "well": 10, "were": [1, 2], "when": [1, 2, 10], "whenev": 4, "where": [2, 7, 8], "where_nan": [6, 8], "whether": 4, "which": [1, 2, 4, 7, 10], "while": [1, 8], "whole": 7, "wide": 11, "within": 4, "without": [1, 7, 8, 9, 10, 11], "work": 1, "workflow": 3, "wraper": 10, "wrapper": 10, "write": [1, 2, 7, 10], "write_to_fil": [6, 8], "writemodel": [1, 6, 7], "writerast": [1, 6, 10], "written": [7, 10], "www": 9, "x": [1, 9, 10], "xavier": 9, "xmax": 10, "xmin": 10, "xor": 9, "xorexampl": [6, 9], "xy": 10, "y": [1, 9, 10], "yield": 10, "ymax": 10, "ymin": 10, "yml": 4, "you": [1, 2, 4, 9, 10, 11], "your": [4, 9, 11], "z": [8, 9], "zero": 7}, "titles": ["&lt;no title&gt;", "Advanced", "A First Model", "SpartANN", "Installation", "&lt;no title&gt;", "spartann package", "spartann.classifier package", "spartann.datatable package", "spartann.engine package", "spartann.spatial package", "Usage"], "titleterms": {"A": 2, "advanc": [1, 11], "analysi": 6, "api": [3, 5], "artifici": 6, "check": 4, "classifi": 7, "conda": 4, "content": [6, 7, 8, 9, 10], "data": 1, "datat": 8, "engin": 9, "ensembl": 2, "exampl": [0, 3], "first": 2, "get": 3, "input": 2, "instal": 4, "model": [1, 2, 7], "modul": [6, 7, 8, 9, 10], "network": 6, "neural": 6, "nnengin": 9, "packag": [3, 5, 6, 7, 8, 9, 10], "pattern": 6, "predict": [1, 2], "prepar": 2, "raster": 10, "read": 1, "remot": 6, "requir": 4, "result": 1, "sens": 6, "simpl": 11, "spartann": [3, 6, 7, 8, 9, 10], "spatial": 10, "spectral": 6, "start": 3, "submodul": [6, 7, 8, 9, 10], "subpackag": 6, "system": 4, "tool": 6, "train": [1, 2], "us": 11, "usag": 11, "valid": 7, "version": 6}})